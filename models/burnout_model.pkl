import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import classification_report, accuracy_score
import joblib
import os

# Sample dataset creation (you can replace this with real CSV loading)
data = {
    'WorkHours': [40, 50, 35, 60, 45, 30, 55, 48],
    'TasksCompleted': [20, 22, 15, 10, 18, 25, 12, 17],
    'BreaksTaken': [2, 1, 3, 1, 2, 4, 1, 2],
    'OvertimeHours': [2, 5, 0, 10, 3, 1, 8, 4],
    'LeavesTaken': [1, 0, 2, 0, 1, 3, 0, 1],
    'PerformanceRating': [4.2, 3.5, 4.8, 2.0, 3.7, 4.9, 2.5, 3.9],
    'BurnoutRisk': [0, 1, 0, 1, 0, 0, 1, 1]
}
df = pd.DataFrame(data)

# Define features and target
X = df.drop('BurnoutRisk', axis=1)
y = df['BurnoutRisk']

# Scale features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.25, random_state=42)

# Train the model
model = LogisticRegression()
model.fit(X_train, y_train)

# Evaluate the model
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred, output_dict=True)

# Save model
os.makedirs("/mnt/data/models", exist_ok=True)
model_path = "/mnt/data/models/burnout_model.pkl"
joblib.dump(model, model_path)

model_path, accuracy, report
